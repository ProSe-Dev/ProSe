// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pbft.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ack struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_159b991729119493, []int{0}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

type PrePrepareRequest struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	ViewNumber           int64    `protobuf:"varint,3,opt,name=viewNumber,proto3" json:"viewNumber,omitempty"`
	LeaderID             string   `protobuf:"bytes,4,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrePrepareRequest) Reset()         { *m = PrePrepareRequest{} }
func (m *PrePrepareRequest) String() string { return proto.CompactTextString(m) }
func (*PrePrepareRequest) ProtoMessage()    {}
func (*PrePrepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_159b991729119493, []int{1}
}

func (m *PrePrepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrePrepareRequest.Unmarshal(m, b)
}
func (m *PrePrepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrePrepareRequest.Marshal(b, m, deterministic)
}
func (m *PrePrepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrePrepareRequest.Merge(m, src)
}
func (m *PrePrepareRequest) XXX_Size() int {
	return xxx_messageInfo_PrePrepareRequest.Size(m)
}
func (m *PrePrepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrePrepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrePrepareRequest proto.InternalMessageInfo

func (m *PrePrepareRequest) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *PrePrepareRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *PrePrepareRequest) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *PrePrepareRequest) GetLeaderID() string {
	if m != nil {
		return m.LeaderID
	}
	return ""
}

type PrepareRequest struct {
	BlockHash            string   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	ViewNumber           int64    `protobuf:"varint,3,opt,name=viewNumber,proto3" json:"viewNumber,omitempty"`
	NodeID               string   `protobuf:"bytes,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareRequest) Reset()         { *m = PrepareRequest{} }
func (m *PrepareRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareRequest) ProtoMessage()    {}
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_159b991729119493, []int{2}
}

func (m *PrepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareRequest.Unmarshal(m, b)
}
func (m *PrepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareRequest.Marshal(b, m, deterministic)
}
func (m *PrepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareRequest.Merge(m, src)
}
func (m *PrepareRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareRequest.Size(m)
}
func (m *PrepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareRequest proto.InternalMessageInfo

func (m *PrepareRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *PrepareRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *PrepareRequest) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *PrepareRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

type CommitRequest struct {
	BlockHash            string   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockNumber          int64    `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	ViewNumber           int64    `protobuf:"varint,3,opt,name=viewNumber,proto3" json:"viewNumber,omitempty"`
	NodeID               string   `protobuf:"bytes,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_159b991729119493, []int{3}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *CommitRequest) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *CommitRequest) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *CommitRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func init() {
	proto.RegisterType((*Ack)(nil), "proto.Ack")
	proto.RegisterType((*PrePrepareRequest)(nil), "proto.PrePrepareRequest")
	proto.RegisterType((*PrepareRequest)(nil), "proto.PrepareRequest")
	proto.RegisterType((*CommitRequest)(nil), "proto.CommitRequest")
}

func init() { proto.RegisterFile("proto/pbft.proto", fileDescriptor_159b991729119493) }

var fileDescriptor_159b991729119493 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x51, 0x4d, 0x4a, 0xc3, 0x40,
	0x14, 0x76, 0x4c, 0x1b, 0x9b, 0x57, 0x15, 0x1d, 0xb4, 0x84, 0x20, 0x12, 0x67, 0x95, 0x85, 0x44,
	0xa8, 0x5e, 0xa0, 0x55, 0x44, 0x37, 0x12, 0x06, 0x2f, 0x90, 0x9f, 0x27, 0x0d, 0x69, 0x3a, 0x71,
	0x9a, 0xd6, 0x23, 0xe8, 0x05, 0xdc, 0x78, 0x5a, 0xe9, 0xcc, 0x98, 0xb4, 0x8a, 0x3b, 0xc1, 0x55,
	0xde, 0xf7, 0xf3, 0x1e, 0x5f, 0xe6, 0x83, 0x83, 0x4a, 0x8a, 0x5a, 0x5c, 0x54, 0xc9, 0x53, 0x1d,
	0xaa, 0x91, 0x76, 0xd5, 0xc7, 0x1b, 0x68, 0x21, 0x99, 0x8a, 0xb4, 0x48, 0x27, 0x71, 0x3e, 0xd3,
	0x32, 0x3b, 0x03, 0x6b, 0x94, 0x16, 0xd4, 0x83, 0x9e, 0xc4, 0x14, 0xf3, 0x25, 0x66, 0x2e, 0xf1,
	0x49, 0xd0, 0xe3, 0x0d, 0x66, 0xef, 0x04, 0x0e, 0x23, 0x89, 0x91, 0xc4, 0x2a, 0x96, 0xc8, 0xf1,
	0x79, 0x81, 0xf3, 0x9a, 0x32, 0xe8, 0xaa, 0x63, 0xca, 0xde, 0x1f, 0xee, 0xea, 0x7b, 0xe1, 0x78,
	0xc5, 0x71, 0x2d, 0x51, 0x1f, 0xfa, 0x6a, 0x78, 0x58, 0x94, 0x09, 0x4a, 0x77, 0xdb, 0x27, 0x81,
	0xc5, 0xd7, 0x29, 0x7a, 0x0a, 0xb0, 0xcc, 0xf1, 0xc5, 0x18, 0x2c, 0x65, 0x58, 0x63, 0x56, 0xb9,
	0xa6, 0x18, 0x67, 0x28, 0xef, 0x6f, 0xdc, 0x8e, 0x4f, 0x02, 0x87, 0x37, 0x98, 0xbd, 0x11, 0xd8,
	0xff, 0x16, 0xea, 0x04, 0x1c, 0x75, 0xfd, 0x2e, 0x9e, 0x4f, 0x54, 0x30, 0x87, 0xb7, 0xc4, 0x1f,
	0xc4, 0x19, 0x80, 0x3d, 0x13, 0x19, 0x36, 0x61, 0x0c, 0x62, 0xaf, 0x04, 0xf6, 0xae, 0x45, 0x59,
	0xe6, 0xf5, 0x3f, 0x27, 0x19, 0x7e, 0x10, 0xe8, 0x44, 0xe3, 0xdb, 0x47, 0x7a, 0x05, 0xd0, 0x96,
	0x46, 0x5d, 0x53, 0xcf, 0x8f, 0x1e, 0x3d, 0x30, 0xca, 0x28, 0x2d, 0xd8, 0x16, 0x0d, 0x61, 0xe7,
	0x6b, 0xe5, 0xb8, 0x5d, 0xf9, 0xdd, 0x7f, 0x0e, 0xb6, 0xfe, 0x6f, 0x7a, 0x64, 0xf8, 0x8d, 0x67,
	0xd8, 0x74, 0x27, 0xb6, 0x02, 0x97, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x64, 0x41, 0xbe, 0x56,
	0xa6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PBFTClient is the client API for PBFT service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PBFTClient interface {
	PrePrepare(ctx context.Context, in *PrePrepareRequest, opts ...grpc.CallOption) (*Ack, error)
	Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*Ack, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*Ack, error)
}

type pBFTClient struct {
	cc *grpc.ClientConn
}

func NewPBFTClient(cc *grpc.ClientConn) PBFTClient {
	return &pBFTClient{cc}
}

func (c *pBFTClient) PrePrepare(ctx context.Context, in *PrePrepareRequest, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/proto.PBFT/PrePrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pBFTClient) Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/proto.PBFT/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pBFTClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/proto.PBFT/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PBFTServer is the server API for PBFT service.
type PBFTServer interface {
	PrePrepare(context.Context, *PrePrepareRequest) (*Ack, error)
	Prepare(context.Context, *PrepareRequest) (*Ack, error)
	Commit(context.Context, *CommitRequest) (*Ack, error)
}

// UnimplementedPBFTServer can be embedded to have forward compatible implementations.
type UnimplementedPBFTServer struct {
}

func (*UnimplementedPBFTServer) PrePrepare(ctx context.Context, req *PrePrepareRequest) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrePrepare not implemented")
}
func (*UnimplementedPBFTServer) Prepare(ctx context.Context, req *PrepareRequest) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prepare not implemented")
}
func (*UnimplementedPBFTServer) Commit(ctx context.Context, req *CommitRequest) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}

func RegisterPBFTServer(s *grpc.Server, srv PBFTServer) {
	s.RegisterService(&_PBFT_serviceDesc, srv)
}

func _PBFT_PrePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrePrepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PBFTServer).PrePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PBFT/PrePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PBFTServer).PrePrepare(ctx, req.(*PrePrepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PBFT_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PBFTServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PBFT/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PBFTServer).Prepare(ctx, req.(*PrepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PBFT_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PBFTServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PBFT/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PBFTServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PBFT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PBFT",
	HandlerType: (*PBFTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PrePrepare",
			Handler:    _PBFT_PrePrepare_Handler,
		},
		{
			MethodName: "Prepare",
			Handler:    _PBFT_Prepare_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _PBFT_Commit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/pbft.proto",
}
